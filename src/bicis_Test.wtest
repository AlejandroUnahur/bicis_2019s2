import bicis.*
import bicis_Depositos.*

test "Bicis" {

	const bici1 = new Bicicleta() 
	bici1.rodado(28)
	bici1.largo(150)
	bici1.marca("Olmo")
	bici1.agregarAccesorio(farolito)
	assert.equals(85,bici1.altura())
	assert.equals(34,bici1.velocidadDeCrucero())
	assert.equals(0,bici1.carga())
	assert.equals(14.5,bici1.peso())
	assert.that(bici1.tieneLuz())
	assert.equals(1,bici1.cantAccesoriosLivianos())
	
    const bici2 = new Bicicleta() 
	bici2.rodado(26)
	bici2.largo(110)
	bici2.marca("Legnano")
	bici2.agregarAccesorio(farolito)
	const canasto1 = new Canasto()
	canasto1.volumen(8)
	bici2.agregarAccesorio(canasto1)
	const morral1 = new Morral()
	morral1.largo(21)
	morral1.tieneOjoDeGato()
	bici2.agregarAccesorio(morral1)
	assert.equals(80,bici2.altura())
	assert.equals(28,bici2.velocidadDeCrucero())
	assert.equals(23,bici2.carga())
	assert.equals(15.5,bici2.peso())
	assert.that(bici2.tieneLuz())
	assert.equals(2,bici2.cantAccesoriosLivianos())
	
	const bici3 = new Bicicleta() 
	bici3.rodado(20)
	bici3.largo(90)
	bici3.marca("Legnano")
	const morral2 = new Morral()
	morral2.largo(6)
	bici3.agregarAccesorio(morral2)
	assert.equals(65,bici3.altura())
	assert.equals(22,bici3.velocidadDeCrucero())
	assert.equals(2,bici3.carga())
	assert.equals(11.2,bici3.peso())
	assert.notThat(bici3.tieneLuz())
	assert.equals(0,bici3.cantAccesoriosLivianos())


	const deposito1 = new Deposito()
	deposito1.agregarBici(bici1)
	deposito1.agregarBici(bici2)
	deposito1.agregarBici(bici3)
	assert.equals([bici1,bici2],deposito1.bicisRapidas())
	assert.equals(#{"Olmo","Legnano"},deposito1.marcasDeBicis())
	assert.notThat(deposito1.esDepositoNocturno())
	assert.that(deposito1.tieneBiciParaLlevar(10))
	assert.notThat(deposito1.tieneBiciParaLlevar(50))
	
	
}